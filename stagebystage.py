import numpy as np
import matplotlib.pyplot as plt

# --- Your Butcher tableau (as before) ---
a = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0243586417803786, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0258303808904268, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0667956303329210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0140960387721938, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0412105997557866, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0149469583607297, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.414086419082813, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.00395908281378477, 0, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.480561088337756, 0, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.00661245794721050, 0.319660987317690, 0, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.00661245794721050, 0.216746869496930, 0.00668808071535874, 0, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.00661245794721050, 0.216746869496930, 0, 0.0374638233561973, 0, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.00661245794721050, 0.216746869496930, 0, 0.422645975498266, 0.439499983548480, 0, 0],
    [0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.0358989324994081, 0.00661245794721050, 0.216746869496930, 0, 0.422645975498266, 0.0327614907498598, 0.367805790222090, 0]
])
b = np.array([
    0.035898932499408134, 0.035898932499408134, 0.035898932499408134,
    0.035898932499408134, 0.035898932499408134, 0.035898932499408134,
    0.035898932499408134, 0.035898932499408134, 0.006612457947210495,
    0.21674686949693006, 0.0, 0.42264597549826616, 0.03276149074985981,
    0.0330623263939421, 0.0009799086295048407
])

R_max = 72.36
num_points = 1000
z_grid = np.linspace(-R_max, 0, num_points)
s = a.shape[0]
Q_all = np.zeros((num_points, s), dtype=np.complex128)

def compute_Q_all(a, z):
    s = a.shape[0]
    Q = np.zeros(s, dtype=np.complex128)
    for i in range(1, s):
        Q[i] = np.sum(a[i, :i] * (1 + z * Q[:i]))
    return Q

# Compute Q_i(z) for each z and stage i
for idx, z in enumerate(z_grid):
    Q_all[idx, :] = compute_Q_all(a, z)

# --- Plot: each line is |Q_i(z)| for a different stage i ---
plt.figure(figsize=(10, 6))
for i in range(s):
    plt.plot(z_grid, np.abs(Q_all[:, i]), lw=1, alpha=0.7, label=f'Stage {i+1}' if i in [0, s-1] else None)
plt.yscale('log')
plt.axvline(-R_max, color='k', ls='--', label='$z = -R_{\\max}$')
plt.xlabel(r'$z = \lambda h$', fontsize=13)
plt.ylabel(r'Stage amplification $|Q_i(z)|$', fontsize=13)
plt.title('Stage-by-stage internal amplification for 15-stage ESRK', fontsize=15)
plt.tight_layout()
# Optionally show legend for only first/last stage
handles, labels = plt.gca().get_legend_handles_labels()
plt.legend([handles[0], handles[-1], handles[-2]], ['Stage 1', f'Stage {s}', '$z=-R_{\\max}$'])
plt.show()
